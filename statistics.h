/*
   Copyright (C) 2010, 2011 by Massimo Lauria <lauria.massimo@gmail.com>

   Created   : "2011-01-12, mercoledì 17:38 (CET) Massimo Lauria"
   Time-stamp: "2011-01-12, mercoledì 18:30 (CET) Massimo Lauria"

   Description::

   Utilities for statistics about the running time.


*/


/* Preamble */
#ifndef  STATISTICS_H
#define  STATISTICS_H

#include <stdlib.h>
#include <stdio.h>
#include "common.h"
/* Code */


typedef struct {

  Counter clock;
  Counter search_space;      /* A upper bound on uniques configurations */

  /* Counters for interval amounts */
  Counter processed;              /* Element processed */
  Counter queued;                 /* Element inserted in the queue */
  Counter queued_and_discarded;   /* Element inserted in the queue */
  Counter first_queuing;          /* Queued elements encountered for the first time */
  Counter requeuing;              /* Old elements pushed back in the queue */
  Counter above_upper_bound;      /* Element above the upper bounds */
  Counter suboptimal;             /* Element discarded because better path exists */
  Counter offspring;              /* Element generated by a processed element */
  /* Counters for totals */
  Counter processed_T;              /* Element processed */
  Counter queued_T;                 /* Element inserted in the queue */
  Counter queued_and_discarded_T;   /* Element inserted in the queue */
  Counter first_queuing_T;          /* Queued elements encountered for the first time */
  Counter requeuing_T;              /* Old elements pushed back in the queue */
  Counter above_upper_bound_T;      /* Element above the upper bounds */
  Counter suboptimal_T;             /* Element discarded because better path exists */
  Counter offspring_T;              /* Element generated by a processed element */

} Statistic;

extern void statistics_make_report(FILE *stream,Statistic *const s);

#ifdef PRINT_RUNNING_STATS

#define STATS_REPORT(S) {statistics_make_report(stderr,&(S));}
#define STATS_CREATE(s) Statistic s={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
#define STATS_INC(s,n) { (s).n++; }
#define STATS_SET(s,n,v) { (s).n=(v); }
#define STATS_ADD(s,n,v) { (s).n+=(v); }
#define STATS_GET(s,n)   ((s).n)

#else

#define STATS_REPORT(s) {}
#define STATS_CREATE(s) { }
#define STATS_INC(s,n) { }
#define STATS_SET(s,n,v) { }
#define STATS_ADD(s,n,v) { }
#define STATS_GET(s,n) { }

#endif

#endif /* STATISTICS_H */
